name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build-macos:
    runs-on: macos-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        # CMAKE is already installed on GitHub runners
        echo "Using system cmake: $(cmake --version)"

    - name: Build KEYQ
      run: |
        # Build everything in one step to avoid path issues
        make clean
        make build plugin

    - name: Run tests
      run: |
        ./build/efefte

    - name: Create DMG Installer
      run: |
        echo "Creating DMG installer..."
        mkdir -p build/dmg-contents
        cp -R build/KEYQAudioUnit.component build/dmg-contents/
        cp -R build/KEYQStandalone.app build/dmg-contents/
        echo "Creating installer app..."
        osacompile -o "build/dmg-contents/Install KEYQ.app" installer/Install.applescript
        hdiutil create -volname "Turbeaux Sounds KEYQ" \
          -srcfolder build/dmg-contents \
          -ov -format UDZO \
          build/TurbeauxSounds-KEYQ-${{ github.ref_name }}.dmg

    - name: Package Audio Unit
      run: |
        cd build
        if [ -d "KEYQAudioUnit.component" ]; then
          VERSION_TAG="${{ github.ref_name }}"
          VERSION="${VERSION_TAG#v}"  # Remove 'v' prefix if present
          zip -r KEYQ-AudioUnit-${VERSION:-latest}.zip KEYQAudioUnit.component
        else
          echo "Audio Unit not found, skipping..."
        fi

    - name: Package Standalone App
      run: |
        cd build
        if [ -d "KEYQStandalone.app" ]; then
          VERSION_TAG="${{ github.ref_name }}"
          VERSION="${VERSION_TAG#v}"  # Remove 'v' prefix if present
          zip -r KEYQ-Standalone-${VERSION:-latest}.zip KEYQStandalone.app
        else
          echo "Standalone app not found, skipping..."
        fi

    - name: Upload Audio Unit Artifact
      uses: actions/upload-artifact@v4
      with:
        name: efefte-audiounit
        path: build/KEYQ-AudioUnit-*.zip

    - name: Upload Standalone Artifact
      uses: actions/upload-artifact@v4
      with:
        name: efefte-standalone
        path: build/KEYQ-Standalone-*.zip

    - name: Upload DMG Installer
      uses: actions/upload-artifact@v4
      with:
        name: efefte-dmg
        path: build/TurbeauxSounds-KEYQ-*.dmg

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          build/KEYQ-AudioUnit-*.zip
          build/KEYQ-Standalone-*.zip
          build/TurbeauxSounds-KEYQ-*.dmg
        body: |
          ## Turbeaux Sounds KEYQ ${{ github.ref_name }}

          ðŸŽµ **Audio Unit Plugin for Logic Pro**
          - Real-time FFT spectrum analysis
          - Professional audio processing tools
          - Native macOS integration

          ðŸ’» **Standalone Spectrum Analyser**
          - Independent microphone analysis
          - Development and testing tool
          - No Logic Pro required

          ### Easy Installation

          **ðŸ’¿ DMG Installer (Recommended):**
          1. Download `TurbeauxSounds-KEYQ-*.dmg`
          2. Double-click to mount
          3. Drag `KEYQAudioUnit.component` to `Components` folder
          4. Drag `KEYQStandalone.app` to `Applications` folder
          5. Restart Logic Pro

          **ðŸ“¦ Manual Installation:**
          - Download individual zip files and install manually

          Built with KEYQ FFT Library v${{ github.ref_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-docs:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    # Add environment for GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Add permissions for GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
    - uses: actions/checkout@v4

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './docs'

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4